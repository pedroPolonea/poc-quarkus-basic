# Configuration file
# key = value
quarkus.datasource.url = jdbc:postgresql://localhost:5432/orders
quarkus.datasource.driver = org.postgresql.Driver
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres

#%dev.quarkus.hibernate-orm.database.generation = drop-and-create
#%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql
# Opentracing + Jaeger

quarkus.jaeger.service-name=quarkus-poc
# ratelimiting (2 = rastrea no maximo 2 transacoes por segundo)
# remote (configuração será feita em um agent)
# const(1 = rastreia todas as requisições, 0 = não rastreia )
# probabilistic (0.2 = 20% das requisições são rastreadas)
quarkus.jaeger.sampler-type=const
#Rastrear todas as requisições
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces

#Definindo rotas de Clientes Rest
br.com.qp.client.AddressExternalClient/mp-rest/url=https://viacep.com.br
br.com.qp.client.AddressExternalClient/mp-rest/scope=javax.inject.Singleton

br.com.qp.client.AddressInternalClient/mp-rest/url=http://localhost:9000
br.com.qp.client.AddressInternalClient/mp-rest/scope=javax.inject.Singleton

# Flyway minimal config properties
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=1.0.0
quarkus.flyway.baseline-description=Initial version

# Flyway optional config properties
# quarkus.flyway.baseline-on-migrate=true
# quarkus.flyway.baseline-version=1.0.0
# quarkus.flyway.baseline-description=Initial version
# quarkus.flyway.connect-retries=10
# quarkus.flyway.schemas=TEST_SCHEMA
# quarkus.flyway.table=flyway_quarkus_history
# quarkus.flyway.locations=db/location1,db/location2
# quarkus.flyway.sql-migration-prefix=X
# quarkus.flyway.repeatable-sql-migration-prefix=K

#Keycloak and OpenID
quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/quarkus-quickstart
quarkus.oidc.client-id=backend-service